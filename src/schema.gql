# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Partner {
  id: Int!
  name: String!
  phone: Int!
  campaigns: [Campaign!]
}

type Ad {
  id: Int!
  title: String!
  content: String!
  type: String!
  status: String!
  campaignId: Int!
  createdAt: DateTime!
  updateAt: DateTime!
  campaign: Campaign!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Campaign {
  id: Int!
  name: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  status: String!
  createdAt: DateTime!
  updateAt: DateTime!
  ads: [Ad!]
  joinedCampaigns: [UserCampaign!]
  partners: [Partner!]
}

type UserCampaign {
  id: Int!
  campaignId: Int!
  userId: Int!
  campaign: Campaign
  user: User
}

type User {
  id: Int!
  username: String!
  email: String!
  joinedCampaigns: [UserCampaign!]
}

type AuthOutPut {
  message: String
  success: Boolean
  timeStamp: String
  statusCode: Float
  user: User!
  token: String!
}

type AuthResponse {
  message: String
  success: Boolean
  timeStamp: String
  statusCode: Float
  data: AuthOutPut
}

type UserResponse {
  message: String
  success: Boolean
  timeStamp: String
  statusCode: Float
  data: User
}

type PaginationInfo {
  totalPages: Int!
  currentPage: Int!
  totalItems: Int!
}

type CampaignsResponse {
  message: String
  success: Boolean
  timeStamp: String
  statusCode: Float
  items: [Campaign!]
  pagination: PaginationInfo
}

type CampaignResponse {
  message: String
  success: Boolean
  timeStamp: String
  statusCode: Float
  data: Campaign
}

type UserCampaignOutput {
  message: String
  success: Boolean
  timeStamp: String
  statusCode: Float
  id: Float!
  user: User!
  campaign: Campaign!
  joinAt: DateTime!
}

type UserCampaignsResponse {
  message: String
  success: Boolean
  timeStamp: String
  statusCode: Float
  items: [UserCampaign!]
  pagination: PaginationInfo
}

type UserCampaignResponse {
  message: String
  success: Boolean
  timeStamp: String
  statusCode: Float
  data: UserCampaignOutput
}

type Query {
  sayHello: String!
  getUserById(id: Float!): UserResponse!
  getUserByEmail(email: String!): UserResponse!
  getUserByusername(username: String!): UserResponse!
  deleteUser: String!
  getCampaignById(id: Int!): UserCampaignResponse!
  getCampaigns(
    campaignDto: CampaignDto!
    page: Int
    limit: Int
  ): CampaignsResponse!
  getListCampaigns(page: Int, limit: Int): CampaignsResponse!
  getUserCampaigns(userId: Int!, page: Int, limit: Int): UserCampaignsResponse!
  getCampaignsFromUser(
    campaignId: Int!
    page: Int
    limit: Int
  ): UserCampaignsResponse!
}

input CampaignDto {
  name: String
  description: String
  startDate: DateTime
  endDate: DateTime
}

type Mutation {
  register(fcmToken: String!, createUserDto: CreateUserDto!): AuthResponse!
  login(fcmToken: String!, loginDto: LoginDto!): AuthResponse!
  forgotPassword(email: String!): String!
  resetPassword(resetPasswordDto: ResetPasswordDto!): String!
  changePassword(changePasswordDto: ChangePasswordDto!): String!
  adminLogin(fcmToken: String!, loginDto: LoginDto!): AuthResponse!
  managerLogin(fcmToken: String!, loginDto: LoginDto!): AuthResponse!
  logout: Boolean!
  updateUser(updateUserDto: UpdateUserDto!): UserResponse!
  UpdateUserRole(checkEmail: String!, companyId: Float!): String!
  createCampaign(createCampaignDto: CreateCampaignCDto!): CampaignResponse!
  UpdateCampaign(id: Int!, updateCampaignDto: CampaignDto!): CampaignResponse!
  deleteCampaign(id: Int!): CampaignResponse!
  joinCampaign(userId: Int!, campaignId: Int!): UserCampaignResponse!
  deleteUserFromCampaign: String!
  removeUserFromCampaign(userId: Int!, campaignId: Int!): String!
}

input CreateUserDto {
  username: String!
  email: String!
  password: String!
}

input LoginDto {
  email: String!
  password: String!
}

input ResetPasswordDto {
  token: String!
  password: String!
}

input ChangePasswordDto {
  password: String!
  newPassword: String!
}

input UpdateUserDto {
  username: String
  email: String
  phone: String
}

input CreateCampaignCDto {
  name: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
}
